plugins {
    id 'com.github.johnrengelman.shadow' version "7.1.2"
    id "me.modmuss50.mod-publish-plugin" version "0.5.1"
}

archivesBaseName = "${archivesBaseName}-forge"

architectury {
    platformSetupLoomIde()
    forge()
}


loom {
    forge {
        mixinConfig "potionicons.mixins.json"
    }
}

tasks {
    tasks.withType(Jar).configureEach {
        exclude("architectury.common.json")
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"


    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    modApi "com.samsthenerd.inline:inline-forge:${project.inline_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.7:processor'

    implementation(include("io.github.llamalad7:mixinextras-forge:${mixinExtrasVersion}"))

}

processResources {
    inputs.property "mod_version", project.version

    filesMatching('META-INF/mods.toml') {
        expand "mod_version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}


publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
    }

    repositories {
        maven {
            url System.getenv("local_maven_url")
        }
    }
}


publishMods {
    file = remapJar.archiveFile
    additionalFiles.from(sourcesJar.archiveFile)
    changelog = trimChangelog(file("$rootDir/changelog.md").text)
    type = STABLE
    modLoaders.add("forge")

    version = project.version + "-forge"
    displayName = "Potion Icons" + " " + project.version + " [Forge]"

    curseforge {
        accessToken = System.getenv("CURSEFORGE_API_KEY")
        projectId = project.potionicons_curseforge_id
        minecraftVersions.add(project.minecraft_version)

        requires{
            slug = "inline"
        }
        requires{
            slug = "cloth-config"
        }
    }

    modrinth {
        accessToken = System.getenv("MODRINTH_API_KEY")
        projectId = project.potionicons_modrinth_slug
        minecraftVersions.add(project.minecraft_version)

        requires{
            slug = "inline"
        }
        requires{
            slug = "cloth-config"
        }
    }
}